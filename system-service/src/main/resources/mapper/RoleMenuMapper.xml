<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.service.mapper.RoleMenuMapper">
  <resultMap id="roleMenuMap" type="com.system.facade.vo.RoleMenuVO">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="MENU_ID" jdbcType="VARCHAR" property="menuId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <select id="selectByRoleId" resultMap="roleMenuMap">
    select   ID, MENU_ID, ROLE_ID, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER
    from TB_SYS_ROLE_MENU
    where role_id=#{roleId}
  </select>

  <select id="selectByUserId" resultType="com.system.facade.vo.MenuVO">
    SELECT menu_id,name,url,parent_id
    FROM tb_sys_menu where
     menu_id in(
      select DISTINCT t.menu_id from tb_sys_role r,tb_sys_role_menu t where r.role_id = t.role_id
      and r.role_id in(
      select role_id from tb_sys_user_role where user_id = #{userId}
      ) and r.status=1
      )
  </select>

  <delete id="deleteByRoleId" parameterType="string">
    delete from TB_SYS_ROLE_MENU where role_id=#{roleId}
  </delete>

  <delete id="deleteNotIn">
    delete from TB_SYS_ROLE_MENU
    where menu_id not in
    (
    <foreach collection="menuIds" separator="," item="menuId">
      #{menuId}
    </foreach>
    )
    and role_id =#{roleId}
  </delete>


  <insert id="insert" parameterType="com.system.facade.vo.RoleMenuVO">
    <selectKey keyProperty="id" order="BEFORE" resultType="string">
      SELECT seq_sys_role_menu.nextval  from dual
    </selectKey>
    insert into TB_SYS_ROLE_MENU
    (ID,MENU_ID,ROLE_ID,CREATE_TIME,UPDATE_TIME,CREATE_USER,UPDATE_USER)
    SELECT #{id},#{menuId},#{roleId},sysdate,sysdate,#{createUser},#{updateUser}
    from dual where not exists (
     select 1 from TB_SYS_ROLE_MENU where menu_id=#{menuId} and role_id=#{roleId}
    )
  </insert>


</mapper>