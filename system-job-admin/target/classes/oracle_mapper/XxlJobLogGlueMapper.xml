<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobLogGlueDao">
	<resultMap id="XxlJobLogGlue" type="com.xxl.job.admin.core.model.XxlJobLogGlue" >
		<result column="id" property="id" />
	    <result column="job_id" property="jobId" />
		<result column="glue_type" property="glueType" />
	    <result column="glue_source" property="glueSource" />
	    <result column="glue_remark" property="glueRemark" />
	    <result column="add_time" property="addTime" />
	    <result column="update_time" property="updateTime" />
	</resultMap>

	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLogGlue">
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
			SELECT SEQ_TD_TRIGGER_LOGGLUE.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TD_TRIGGER_LOGGLUE (
			  ID,
			  JOB_ID,
			  GLUE_TYPE,
			  GLUE_SOURCE,
			  GLUE_REMARK,
			  ADD_TIME,
			  UPDATE_TIME)
        VALUES (#{id,jdbcType=DECIMAL},
				#{jobId,jdbcType=DECIMAL},
				#{glueType,jdbcType=VARCHAR},
				#{glueSource,jdbcType=VARCHAR},
				#{glueRemark,jdbcType=VARCHAR},
				sysdate,
				sysdate)
	</insert>
	
	<select id="findByJobId" parameterType="java.lang.Integer" resultMap="XxlJobLogGlue">
		SELECT T.ID,
				T.JOB_ID,
				T.GLUE_TYPE,
				T.GLUE_SOURCE,
				T.GLUE_REMARK,
				T.ADD_TIME,
				T.UPDATE_TIME
		FROM TD_TRIGGER_LOGGLUE T
		WHERE T.JOB_ID = #{jobId}
		ORDER BY ID DESC
	</select>
	
	<delete id="removeOld" >
		DELETE FROM TD_TRIGGER_LOGGLUE
		WHERE id NOT in(
			SELECT id FROM(
				SELECT id FROM TD_TRIGGER_LOGGLUE
				WHERE job_id = #{jobId}
				and ROWNUM BETWEEN 0 AND #{limit}
				ORDER BY update_time desc
			) t1
		) AND job_id = #{jobId}
	</delete>
	
	<delete id="deleteByJobId" parameterType="java.lang.Integer" >
		DELETE FROM TD_TRIGGER_LOGGLUE WHERE JOB_ID = #{jobId}
	</delete>
	
</mapper>